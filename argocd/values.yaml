fullnameOverride: argocd

server:
  replicas: 2

  service:
    type: LoadBalancer
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "argocd.bruce.spic.me"
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
      service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
      service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:ap-northeast-2:082867736673:certificate/3e3a7d57-e800-4748-990d-cc2e20c30740"
      service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"

  extraArgs:
    - --insecure

  config:
    url: https://argocd.bruce.spic.me

    dex.config: |
      connectors:
      - type: github
        id: github
        name: github
        config:
          clientID: 0ca6b78d5dda3cfc8a53
          clientSecret: $dex.github.clientSecret
          orgs:
            - name: opspresso

  rbacConfig:
    policy.default: "role:readonly"
    policy.csv: |
      p, role:org-admin, applications, *, */*, allow
      p, role:org-admin, clusters, create, *, allow
      p, role:org-admin, clusters, delete, *, allow
      p, role:org-admin, clusters, get, *, allow
      p, role:org-admin, clusters, update, *, allow
      p, role:org-admin, projects, create, *, allow
      p, role:org-admin, projects, delete, *, allow
      p, role:org-admin, projects, get, *, allow
      p, role:org-admin, projects, update, *, allow
      p, role:org-admin, repositories, create, *, allow
      p, role:org-admin, repositories, delete, *, allow
      p, role:org-admin, repositories, get, *, allow
      p, role:org-admin, repositories, update, *, allow
      g, opspresso:sre, role:org-admin

  additionalProjects:
    - name: addons
      namespace: argocd
      description: addons project
      sourceRepos:
        - "*"
      destinations:
        - namespace: "*"
          server: "*"
      clusterResourceWhitelist:
        - group: "*"
          kind: "*"
      namespaceResourceBlacklist:
        - group: "*"
          kind: "*"

    - name: apps
      namespace: argocd
      description: apps project
      sourceRepos:
        - "*"
      destinations:
        - namespace: "*"
          server: "*"
      clusterResourceWhitelist:
        - group: "*"
          kind: "*"
      namespaceResourceBlacklist:
        - group: "*"
          kind: "*"

repoServer:
  replicas: 2

configs:
  secret:
    createSecret: true

    githubSecret: "GITHUB_WEBHOOK"

    extra:
      server.secretkey: "ARGOCD_SERVER_SECRET"
      dex.github.clientSecret: "ARGOCD_GITHUB_SECRET"

    # Argo expects the password in the secret to be bcrypt hashed. You can create this hash with
    # `htpasswd -nbBC 10 "" $PASSWORD | tr -d ':\n' | sed 's/$2y/$2a/'`
    argocdServerAdminPassword: "ARGOCD_PASSWORD"
    # Password modification time defaults to current time if not set
    argocdServerAdminPasswordMtime: "ARGOCD_MTIME"

  repositories:
    - name: env-demo
      type: git
      url: https://github.com/opspresso/argocd-env-demo
    - name: opspresso
      type: helm
      url: https://opspresso.github.io/helm-charts
