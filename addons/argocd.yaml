apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: argocd
spec:
  generators:
    - list:
        elements:
          - cluster: eks-demo
            values:
              acm_arn: "arn:aws:acm:ap-northeast-2:082867736673:certificate/281ab87d-f28b-43db-b4d2-b4759950c369"
              host: "bruce.spic.me"

  template:
    metadata:
      name: "argocd"
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: noti-argocd-alpha-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: addons
      destination:
        name: "{{cluster}}"
        namespace: argocd
      source:
        repoURL: https://argoproj.github.io/argo-helm
        targetRevision: "3.17.5"
        chart: argo-cd
        helm:
          values: |-
            fullnameOverride: argocd

            controller:
              metrics:
                enabled: true
                serviceMonitor:
                  enabled: true
                  interval: 30s
                  selector:
                    release: prometheus-{{cluster}}

            server:
              replicas: 2

              service:
                type: LoadBalancer
                annotations:
                  external-dns.alpha.kubernetes.io/hostname: "argocd.{{values.host}}"
                  service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
                  service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
                  service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "{{values.acm_arn}}"
                  service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"

              extraArgs:
                - --insecure

              config:
                url: https://argocd.{{values.host}}

                dex.config: |
                  connectors:
                  - type: github
                    id: github
                    name: github
                    config:
                      clientID: 0ca6b78d5dda3cfc8a53
                      clientSecret: $dex.github.clientSecret
                      orgs:
                        - name: opspresso
                  staticClients:
                  - id: argo-workflows-sso
                    name: Argo Workflow
                    redirectURIs:
                      - https://argo-workflows.{{values.host}}/oauth2/callback
                    secretEnv: ARGO_WORKFLOWS_SSO_CLIENT_SECRET

              rbacConfig:
                policy.default: "role:readonly"
                policy.csv: |
                  g, opspresso:sre, role:admin

              additionalProjects:
                - name: addons
                  namespace: argocd
                  description: addons project
                  sourceRepos:
                    - "*"
                  destinations:
                    - namespace: "*"
                      server: "*"
                  clusterResourceWhitelist:
                    - group: "*"
                      kind: "*"

                - name: apps
                  namespace: argocd
                  description: apps project
                  sourceRepos:
                    - "*"
                  destinations:
                    - namespace: "*"
                      server: "*"
                  clusterResourceWhitelist:
                    - group: "*"
                      kind: "*"

              metrics:
                enabled: true
                serviceMonitor:
                  enabled: true
                  interval: 30s
                  selector:
                    release: prometheus-{{cluster}}

            dex:
              env:
                - name: ARGO_WORKFLOWS_SSO_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: argocd-secret
                      key: argo-workflows-client-secret
              metrics:
                enabled: true
                serviceMonitor:
                  enabled: true
                  interval: 30s
                  selector:
                    release: prometheus-{{cluster}}

            repoServer:
              replicas: 2

              metrics:
                enabled: true
                serviceMonitor:
                  enabled: true
                  interval: 30s
                  selector:
                    release: prometheus-{{cluster}}

            configs:
              secret:
                createSecret: false

              repositories:
                - name: env-demo
                  type: git
                  url: https://github.com/opspresso/argocd-env-demo
                - name: opspresso
                  type: helm
                  url: https://opspresso.github.io/helm-charts

      syncPolicy:
        # automated:
        #   prune: true
        #   selfHeal: true
        syncOptions:
          - CreateNamespace=true
