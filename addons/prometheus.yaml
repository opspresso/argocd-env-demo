apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: prometheus
spec:
  generators:
    - list:
        elements:
          - cluster: eks-demo

  template:
    metadata:
      name: "prometheus-{{cluster}}"
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: noti-argocd-alpha-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: default
      destination:
        name: "{{cluster}}"
        namespace: addon-prometheus
      source:
        repoURL: https://prometheus-community.github.io/helm-charts
        targetRevision: "18.0.0"
        chart: kube-prometheus-stack
        helm:
          values: |-
            fullnameOverride: prometheus

            prometheus:
              prometheusSpec:
                storageSpec:
                  volumeClaimTemplate:
                    spec:
                      storageClassName: gp3
                      accessModes: ["ReadWriteOnce"]
                      resources:
                        requests:
                          storage: 50Gi

            # alertmanager:
            #   config:
            #     global:
            #       slack_api_url: $slack-token
            #   route:
            #     receiver: "slack"
            #     routes:
            #       - receiver: "slack"

            #   alertmanagerSpec:
            #     useExistingSecret: true
            #     secrets:
            #       - prometheus-alertmanager-secret
            #     storage:
            #       volumeClaimTemplate:
            #         spec:
            #           storageClassName: gp3
            #           accessModes: ["ReadWriteOnce"]
            #           resources:
            #             requests:
            #               storage: 10Gi

            grafana:
              admin:
                existingSecret: "prometheus-grafana-secret"

              ingress:
                enabled: true
                annotations:
                  kubernetes.io/ingress.class: nginx
                hosts:
                  - grafana.bruce.spic.me

              dashboardProviders:
                dashboardproviders.yaml:
                  apiVersion: 1
                  providers:
                  - name: 'default'
                    orgId: 1
                    folder: ''
                    type: file
                    disableDeletion: false
                    editable: true
                    options:
                      path: /var/lib/grafana/dashboards/default

              dashboards:
                default:
                  kube-cluster:
                    gnetId: 9797
                    revision: 15
                    datasource: Prometheus
                  kube-deploy:
                    gnetId: 9679
                    revision: 9
                    datasource: Prometheus

              persistence:
                enabled: true
                type: pvc
                storageClassName: gp3
                accessModes:
                  - ReadWriteOnce
                size: 10Gi

      syncPolicy:
        # automated:
        #   prune: true
        #   selfHeal: true
        syncOptions:
          - CreateNamespace=true
