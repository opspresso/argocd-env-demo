apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: prometheus
spec:
  generators:
    - list:
        elements:
          - cluster: eks-demo
            values:
              host: "bruce.spic.me"

  template:
    metadata:
      name: "prometheus-{{cluster}}"
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: noti-argocd-alpha-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: addons
      destination:
        name: "{{cluster}}"
        namespace: addon-prometheus
      source:
        repoURL: https://prometheus-community.github.io/helm-charts
        targetRevision: "18.0.1"
        chart: kube-prometheus-stack
        helm:
          values: |-
            fullnameOverride: prometheus

            prometheusOperator:
              tolerations:
                - key: group
                  operator: Equal
                  value: monitoring
                  effect: NoSchedule
              nodeSelector:
                group: monitoring

            prometheus:
              prometheusSpec:
                storageSpec:
                  volumeClaimTemplate:
                    spec:
                      storageClassName: gp3
                      accessModes: ["ReadWriteOnce"]
                      resources:
                        requests:
                          storage: 50Gi

                resources:
                  requests:
                    cpu: "1"
                    memory: 2Gi
                  limits:
                    cpu: "2"
                    memory: 4Gi

                tolerations:
                  - key: group
                    operator: Equal
                    value: monitoring
                    effect: NoSchedule
                nodeSelector:
                  group: monitoring

            alertmanager:
              config:
                global:
                  slack_api_url: $slack-token

                route:
                  receiver: "slack"
                  routes:
                    - match:
                        alertname: Watchdog
                      receiver: "null"
                    - match:
                      receiver: "slack"
                      continue: false

                receivers:
                  - name: "null"
                  - name: "slack"
                    slack_configs:
                      - channel: "#sandbox"
                        color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'
                        icon_url: https://avatars3.githubusercontent.com/u/3380462
                        send_resolved: true
                        title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Monitoring Event Notification'
                        text: |
                          {{ range .Alerts }}
                          *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`

                          *Cluster:* `{{cluster}}`

                          *Description:* {{ .Annotations.description }}

                          *Details:*
                            {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* {{ .Value }}
                            {{ end }}
                          {{ end }}

              alertmanagerSpec:
                secrets:
                  - prometheus-alertmanager-secret

                storage:
                  volumeClaimTemplate:
                    spec:
                      storageClassName: gp3
                      accessModes: ["ReadWriteOnce"]
                      resources:
                        requests:
                          storage: 12Gi

                tolerations:
                  - key: group
                    operator: Equal
                    value: monitoring
                    effect: NoSchedule
                nodeSelector:
                  group: monitoring

            grafana:
              enabled: false

      ignoreDifferences:
        - kind: MutatingWebhookConfiguration
          group: admissionregistration.k8s.io
          jsonPointers:
            - /webhooks/0/clientConfig/caBundle
            - /webhooks/0/failurePolicy

        - kind: ValidatingWebhookConfiguration
          group: admissionregistration.k8s.io
          jsonPointers:
            - /webhooks/0/clientConfig/caBundle
            - /webhooks/0/failurePolicy

      syncPolicy:
        # automated:
        #   prune: true
        #   selfHeal: true
        syncOptions:
          - CreateNamespace=true
