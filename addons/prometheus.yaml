apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: prometheus
spec:
  generators:
    - list:
        elements:
          - cluster: eks-demo

  template:
    metadata:
      name: "prometheus-{{cluster}}"
      annotations:
        recipients.argocd-notifications.argoproj.io: slack:noti-argocd-alpha-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: default
      destination:
        name: "{{cluster}}"
        namespace: addon-prometheus
      source:
        repoURL: https://prometheus-community.github.io/helm-charts
        targetRevision: "18.0.0"
        chart: kube-prometheus-stack
        helm:
          values: |-
            fullnameOverride: prometheus

            prometheus:
              prometheusSpec:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: topology.kubernetes.io/zone
                          operator: In
                          values:
                          - ap-northeast-2a

                storageSpec:
                  volumeClaimTemplate:
                    spec:
                      storageClassName: gp3
                      accessModes: ["ReadWriteOnce"]
                      resources:
                        requests:
                          storage: 50Gi

            grafana:
              admin:
                existingSecret: "prometheus-grafana-secret"

      syncPolicy:
        # automated:
        #   prune: true
        #   selfHeal: true
        syncOptions:
          - CreateNamespace=true
