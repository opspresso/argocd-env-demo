apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: ingress-nginx-http-internal
spec:
  generators:
    - list:
        elements:
          - cluster: eks-demo
            url: https://036CC21FD52FBA1C2D0E7F6C4551A402.yl4.ap-northeast-2.eks.amazonaws.com
            values:
              ingress_class: "nginx-internal"

  template:
    metadata:
      name: "ingress-nginx-http-internal-{{cluster}}"
      annotations:
        recipients.argocd-notifications.argoproj.io: slack:noti-argocd-alpha-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: addons
      destination:
        server: "{{url}}"
        namespace: addon-ingress-nginx-http-internal
      source:
        repoURL: https://kubernetes.github.io/ingress-nginx
        targetRevision: "3.35.0"
        chart: ingress-nginx
        helm:
          values: |-
            fullnameOverride: ingress-nginx-http-internal

            controller:
              kind: DaemonSet

              # replicaCount: 2

              config:
                use-forwarded-headers: "true"
                compute-full-forwarded-for: "true"
                whitelist-source-range: "10.0.0.0/8" # internal only
                ssl-redirect: "false" # we use `special` port to control ssl redirection
                server-snippet: |
                  listen 8000;
                  if ( $server_port = 80 ) {
                    return 308 https://$host$request_uri;
                  }

              ingressClass: "{{values.ingress_class}}"

              containerPort:
                http: 80
                https: 443
                special: 8000

              service:
                type: NodePort

                nodePorts:
                  http: 31080
                  https: 31443
                  tcp:
                    "8200": 31200

                targetPorts:
                  http: http
                  https: special # http

                externalTrafficPolicy: Local

                internal:
                  enabled: true

              resources:
                limits:
                  cpu: 500m
                  memory: 512Mi
                requests:
                  cpu: 500m
                  memory: 512Mi

              # autoscaling:
              #   enabled: false
              #   minReplicas: 2
              #   maxReplicas: 5
              #   targetCPUUtilizationPercentage: 60
              #   targetMemoryUtilizationPercentage: 60

              stats:
                enabled: true

              # metrics:
              #   enabled: true
              #   serviceMonitor:
              #     enabled: false
              #     additionalLabels:
              #       release: prometheus-operator

              tolerations:
                - key: group
                  operator: Equal
                  effect: NoSchedule
                  value: ingress

              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                          - key: group
                            operator: In
                            values:
                              - ingress

            tcp:
              "8200": "addon-ingress-nginx-http-internal/ingress-nginx-http-internal-default-backend:80"

            defaultBackend:
              enabled: true

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
