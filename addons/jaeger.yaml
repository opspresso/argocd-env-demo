apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: jaeger
spec:
  generators:
    - git:
        repoURL: https://github.com/opspresso/argocd-env-demo.git
        revision: HEAD
        files:
          - path: "env/addons/alpha/*.yaml"

  template:
    metadata:
      name: "jaeger-{{cluster}}"
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: noti-argocd-{{cluster_env}}-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: addons
      destination:
        name: "{{cluster}}"
        namespace: addon-tracing
      source:
        repoURL: https://jaegertracing.github.io/helm-charts
        targetRevision: "0.55.0"
        chart: jaeger
        helm:
          values: |-
            fullnameOverride: jaeger

            collector:
              resources:
                requests:
                  cpu: 500m
                  memory: 512Mi
                limits:
                  cpu: "1"
                  memory: 1Gi

              service:
                zipkin:
                  port: 9411

              # samplingConfig: |-
              #   {
              #     "service_strategies": [
              #       {
              #         "service": "foo",
              #         "type": "probabilistic",
              #         "param": 0.4,
              #         "operation_strategies": [
              #           {
              #             "operation": "op1",
              #             "type": "probabilistic",
              #             "param": 0.1
              #           },
              #           {
              #             "operation": "op2",
              #             "type": "probabilistic",
              #             "param": 0.2
              #           }
              #         ]
              #       },
              #       {
              #         "service": "bar",
              #         "type": "ratelimiting",
              #         "param": 5
              #       }
              #     ],
              #     "default_strategy": {
              #       "type": "probabilistic",
              #       "param": 0.5
              #     }
              #   }

            query:
              resources:
                requests:
                  cpu: 256m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 512Mi

            ingester:
              enabled: false

              resources:
                requests:
                  cpu: 500m
                  memory: 512Mi
                limits:
                  cpu: "1"
                  memory: 1Gi

            agent:
              tolerations:
                - key: group
                  operator: Equal
                  value: monitoring
                  effect: NoSchedule
                - key: group
                  operator: Equal
                  value: graviton
                  effect: NoSchedule

            provisionDataStore:
              cassandra: true
              elasticsearch: false
              kafka: false

            cassandra:
              config:
                cluster_size: 1

              resources:
                requests:
                  cpu: "1"
                  memory: 2Gi
                limits:
                  cpu: "2"
                  memory: 6Gi

              persistence:
                enabled: true
                storageClass: gp3

              tolerations:
                - key: group
                  operator: Equal
                  value: monitoring
                  effect: NoSchedule
              selector:
                nodeSelector:
                  group: monitoring

      syncPolicy:
        # automated:
        #   prune: true
        #   selfHeal: true
        syncOptions:
          - CreateNamespace=true
