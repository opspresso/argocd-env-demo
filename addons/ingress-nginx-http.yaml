apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: ingress-nginx-http
spec:
  generators:
    - list:
        elements:
          - cluster: eks-demo
            values:
              acm_arn: "arn:aws:acm:ap-northeast-2:082867736673:certificate/281ab87d-f28b-43db-b4d2-b4759950c369"
              hostname: "*.bruce.spic.me"

  template:
    metadata:
      name: "ingress-nginx-http-{{cluster}}"
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: sandbox;noti-argocd-alpha-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: default
      destination:
        name: "{{cluster}}"
        namespace: addon-ingress-nginx-http
      source:
        repoURL: https://kubernetes.github.io/ingress-nginx
        targetRevision: "3.35.0"
        chart: ingress-nginx
        helm:
          values: |-
            fullnameOverride: ingress-nginx-http

            controller:
              kind: DaemonSet

              service:
                targetPorts:
                  http: http
                  https: http
                annotations:
                  external-dns.alpha.kubernetes.io/hostname: "{{values.hostname}}"
                  service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
                  service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '3600'
                  service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "{{values.acm_arn}}"
                  service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
