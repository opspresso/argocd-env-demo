apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: grafana
spec:
  generators:
    - git:
        repoURL: https://github.com/opspresso/argocd-env-demo.git
        revision: HEAD
        files:
          - path: "env/alpha/**/config.json"

  template:
    metadata:
      name: "grafana-{{cluster}}"
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: noti-argocd-{{cluster_env}}-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: addons
      destination:
        name: "{{cluster}}"
        namespace: addon-grafana
      source:
        repoURL: https://grafana.github.io/helm-charts
        targetRevision: "6.17.5"
        chart: grafana
        helm:
          values: |-
            fullnameOverride: grafana

            revisionHistoryLimit: 1

            admin:
              existingSecret: "grafana-secret"

            extraSecretMounts:
              - name: grafana-secret
                secretName: grafana-secret
                defaultMode: 0440
                mountPath: /etc/secrets/grafana-secret
                readOnly: true

            grafana.ini:
              server:
                root_url: "https://grafana.{{hostname}}/"

              auth:
                disable_login_form: false

              # https://grafana.com/docs/grafana/latest/auth/github/
              auth.github:
                enabled: true
                allow_sign_up: true
                client_id: $__file{/etc/secrets/grafana-secret/github-id}
                client_secret: $__file{/etc/secrets/grafana-secret/github-secret}
                scopes: user:email,read:org
                auth_url: https://github.com/login/oauth/authorize
                token_url: https://github.com/login/oauth/access_token
                api_url: https://api.github.com/user
                allowed_organizations: opspresso
                # team_ids: sre

              # https://grafana.com/docs/grafana/latest/auth/google/
              auth.google:
                enabled: true
                allow_sign_up: true
                client_id: $__file{/etc/secrets/grafana-secret/google-id}
                client_secret: $__file{/etc/secrets/grafana-secret/google-secret}
                scopes: https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
                auth_url: https://accounts.google.com/o/oauth2/auth
                token_url: https://accounts.google.com/o/oauth2/token
                allowed_domains: nalbam.com daangn.com

              # # https://grafana.com/docs/grafana/latest/auth/generic-oauth/
              # auth.generic_oauth:
              #   enabled: false
              #   allow_sign_up: true
              #   client_id: "grafana"
              #   client_secret: "df7d395f-e833-49b6-b19c-eea8a54fb06a"
              #   scopes: "openid email profile roles"
              #   auth_url: "https://keycloak.{{hostname}}/auth/realms/demo/protocol/openid-connect/auth"
              #   token_url: "https://keycloak.{{hostname}}/auth/realms/demo/protocol/openid-connect/token"
              #   api_url: "https://keycloak.{{hostname}}/auth/realms/demo/protocol/openid-connect/userinfo"
              #   # role_attribute_path = role

            ingress:
              enabled: false
              annotations:
                kubernetes.io/ingress.class: nginx
                nginx.ingress.kubernetes.io/ssl-redirect: "true"
              hosts:
                - "grafana.{{hostname}}"

            datasources:
              datasources.yaml:
                apiVersion: 1
                datasources:
                - name: Prometheus
                  type: prometheus
                  url: http://prometheus-prometheus.addon-prometheus.svc.cluster.local:9090
                  access: proxy
                  isDefault: true
                - name: Loki
                  type: loki
                  url: http://loki.addon-loki.svc.cluster.local:3100
                  access: proxy

            dashboardProviders:
              dashboardproviders.yaml:
                apiVersion: 1
                providers:
                - name: 'default'
                  orgId: 1
                  folder: ''
                  type: file
                  disableDeletion: false
                  editable: true
                  options:
                    path: /var/lib/grafana/dashboards/default

            dashboards:
              default:
                kube-cluster:
                  url: https://raw.githubusercontent.com/nalbam/kubernetes/master/grafana/kube-cluster.json
                  # gnetId: 9797
                  # revision: 17
                  datasource: Prometheus
                kube-deploy:
                  url: https://raw.githubusercontent.com/nalbam/kubernetes/master/grafana/kube-deployment.json
                  # gnetId: 9679
                  # revision: 13
                  datasource: Prometheus
                kube-sts:
                  url: https://raw.githubusercontent.com/nalbam/kubernetes/master/grafana/kube-statefulset.json
                  # gnetId: 14902
                  # revision: 3
                  datasource: Prometheus
                kube-dms:
                  url: https://raw.githubusercontent.com/nalbam/kubernetes/master/grafana/kube-daemonset.json
                  # gnetId: 14982
                  # revision: 1
                  datasource: Prometheus

                aws-ce:
                  url: https://raw.githubusercontent.com/nalbam/kubernetes/master/grafana/aws-costs-exporter.json
                  datasource: Prometheus

                jvm:
                  url: https://raw.githubusercontent.com/nalbam/kubernetes/master/grafana/jvm.json
                  datasource: Prometheus

                nginx-ingress:
                  url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
                  datasource: Prometheus
                argo-cd:
                  url: https://raw.githubusercontent.com/argoproj/argo-cd/master/examples/dashboard.json
                  datasource: Prometheus
                argo-rollouts:
                  url: https://raw.githubusercontent.com/argoproj/argo-rollouts/master/examples/dashboard.json
                  datasource: Prometheus

                istio-extension-dashboard:
                  url: https://raw.githubusercontent.com/nalbam/kubernetes/master/grafana/istio-extension-dashboard.json
                  datasource: Prometheus
                istio-mesh-dashboard:
                  url: https://raw.githubusercontent.com/nalbam/kubernetes/master/grafana/istio-mesh-dashboard.json
                  datasource: Prometheus
                istio-performance-dashboard:
                  url: https://raw.githubusercontent.com/nalbam/kubernetes/master/grafana/istio-performance-dashboard.json
                  datasource: Prometheus
                istio-service-dashboard:
                  url: https://raw.githubusercontent.com/nalbam/kubernetes/master/grafana/istio-service-dashboard.json
                  datasource: Prometheus
                istio-workload-dashboard:
                  url: https://raw.githubusercontent.com/nalbam/kubernetes/master/grafana/istio-workload-dashboard.json
                  datasource: Prometheus
                pilot-dashboard:
                  url: https://raw.githubusercontent.com/nalbam/kubernetes/master/grafana/istio-pilot-dashboard.json
                  datasource: Prometheus

            persistence:
              enabled: true
              accessModes:
                - ReadWriteOnce
              size: 5Gi
              storageClassName: gp3

            serviceMonitor:
              enabled: true
              labels:
                release: prometheus-{{cluster}}

            tolerations:
              - key: group
                operator: Equal
                value: monitoring
                effect: NoSchedule
            nodeSelector:
              group: monitoring

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
