apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: prometheus-extra
spec:
  generators:
    - list:
        elements:
          - cluster: eks-demo
            values:
              host: "bruce.spic.me"

  template:
    metadata:
      name: "prometheus-extra-{{cluster}}"
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: noti-argocd-alpha-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: default
      destination:
        name: "{{cluster}}"
        namespace: addon-prometheus
      source:
        repoURL: https://charts.helm.sh/incubator
        targetRevision: "0.2.5"
        chart: raw
        helm:
          values: |-
            fullnameOverride: prometheus-extra

            resources:
              - apiVersion: monitoring.coreos.com/v1
                kind: PrometheusRule
                metadata:
                  labels:
                    app: kube-prometheus-stack
                    release: prometheus-{{cluster}}
                  name: prometheus-alert-rules
                spec:
                  groups:
                    - name: InstanceCountChanged
                      rules:
                        - alert: InstanceCountChanged
                          expr: count(kube_node_labels{node=~"^.*$"}) - count(kube_node_labels{node=~"^.*$"} offset 2m) != 0
                          labels:
                            severity: Warning
                          annotations:
                            summary: "Instance Count Changed"
                            description: "The number of instances has changed. (delta: {{ $value }})"

                    - name: InstanceDown
                      rules:
                        - alert: InstanceDown
                          expr: up{job="kubernetes-nodes"} == 0
                          labels:
                            severity: Warning
                          annotations:
                            summary: "Instance Down"
                            description: "The instance({{ $labels.instance }}) is down."

                    - name: HighCpuUsage
                      rules:
                        - alert: HighCpuUsage
                          expr: 100 - (avg by (instance) (irate(node_cpu_seconds_total{job="kubernetes-service-endpoints",mode="idle"}[5m])) * 100) > 70
                          for: 5m
                          labels:
                            severity: Warning
                          annotations:
                            summary: "High CPU Usage(> 70%)"
                            description: "The CPU usage of the instance({{ $labels.instance }}) has exceeded 70 percent for more than 5 minutes."

                    - name: HighMemoryUsage
                      rules:
                        - alert: HighMemoryUsage
                          expr: (node_memory_MemTotal_bytes - node_memory_MemFree_bytes - node_memory_Buffers_bytes - node_memory_Cached_bytes) / node_memory_MemTotal_bytes * 100 > 90
                          for: 5m
                          labels:
                            severity: Warning
                          annotations:
                            summary: "High Memory Usage(> 90%)"
                            description: "The memory usage of the instance({{ $labels.instance }}) has exceeds 90 percent for more than 5 minutes."

                    - name: PodCrashingLooping
                      rules:
                        - alert: PodCrashingLooping
                          expr: round(increase(kube_pod_container_status_restarts_total[30m])) > 0
                          for: 5m
                          labels:
                            severity: Critical
                          annotations:
                            summary: "Pod Crash Looping(> 30m)"
                            description: "Namespace : {{ $labels.namespace }} Pod : {{ $labels.pod }} -- crash {{ $value }} times"

                    - name: KubeNodeNotReady
                      rules:
                        - alert: KubeNodeNotReady
                          expr: kube_node_status_condition{job="kubernetes-service-endpoints",condition="Ready",status="true"} == 0
                          for: 5m
                          labels:
                            severity: Critical
                          annotations:
                            summary: "Kube Node Fail :  {{ $labels.condition }}"
                            description: "Node {{ $labels.node }} is failed. Check node!!"

                    - name: AvgResponseTime
                      rules:
                        - alert: AvgResponseTime
                          expr: (sum(rate(nginx_ingress_controller_response_duration_seconds_sum[5m])) by (host) != 0) / (sum(rate(nginx_ingress_controller_response_duration_seconds_count[5m])) by (host) != 0) > 5
                          for: 5m
                          labels:
                            severity: Warning
                          annotations:
                            summary: "Average Response Time(> 5s)"
                            description: "{{ $labels.host }}'s Average Response Time is over 5sec."

                    - name: HPAMaxUsage
                      rules:
                        - alert: HPAMaxUsage
                          expr: (kube_hpa_status_current_replicas) / (kube_hpa_spec_max_replicas != 1) == 1
                          for: 5m
                          labels:
                            severity: Warning
                          annotations:
                            summary: "HPA Max Usage"
                            description: "{{ $labels.hpa }} is using HPA Max."

              - apiVersion: kubernetes-client.io/v1
                kind: ExternalSecret
                metadata:
                  name: prometheus-alertmanager-secret
                spec:
                  backendType: systemManager
                  data:
                    - key: /k8s/common/slack-token
                      name: slack-token
                    - key: /k8s/common/slack-hooks
                      name: slack-hooks

              - apiVersion: kubernetes-client.io/v1
                kind: ExternalSecret
                metadata:
                  name: prometheus-grafana-secret
                spec:
                  backendType: systemManager
                  data:
                    - key: /k8s/common/admin-user
                      name: admin-user
                    - key: /k8s/common/admin-password
                      name: admin-password
                    - key: /k8s/common/grafana-github-secret
                      name: github-secret

              - apiVersion: networking.istio.io/v1beta1
                kind: Gateway
                metadata:
                  name: prometheus-grafana
                spec:
                  selector:
                    istio: ingressgateway
                  servers:
                    - hosts:
                        - "grafana.{{values.host}}"
                      port:
                        number: 80
                        name: http
                        protocol: HTTP

              - apiVersion: networking.istio.io/v1beta1
                kind: VirtualService
                metadata:
                  name: prometheus-grafana
                spec:
                  hosts:
                    - "grafana.{{values.host}}"
                  gateways:
                    - prometheus-grafana
                  http:
                    - route:
                        - destination:
                            host: prometheus-grafana
                            port:
                              number: 3000

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
