apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: aws-node-termination-handler
spec:
  generators:
    - git:
        repoURL: https://github.com/opspresso/argocd-env-demo.git
        revision: HEAD
        files:
          - path: "env/addons/alpha/*.yaml"

  template:
    metadata:
      name: "aws-node-termination-handler-{{cluster}}"
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: noti-argocd-{{cluster_env}}-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: addons
      destination:
        name: "{{cluster}}"
        namespace: addon-aws-node-termination-handler
      source:
        repoURL: https://aws.github.io/eks-charts
        targetRevision: "0.18.0"
        chart: aws-node-termination-handler
        helm:
          values: |-
            fullnameOverride: aws-node-termination-handler

            awsRegion: "{{aws_region}}"

            enableSqsTerminationDraining: true
            queueURL: "https://sqs.{{aws_region}}.amazonaws.com/{{aws_account_id}}/{{cluster}}-worker"

            serviceAccount:
              annotations:
                eks.amazonaws.com/role-arn: "arn:aws:iam::{{aws_account_id}}:role/irsa--{{cluster}}--aws-node-termination-handler"

            enableRebalanceDraining: true
            enableSpotInterruptionDraining: true

            podTerminationGracePeriod: "180"
            nodeTerminationGracePeriod: "180"

            # enablePrometheusServer: true

            # serviceMonitor:
            #   create: true
            #   labels:
            #     release: prometheus-operator

            webhookURLSecretName: webhook-secret

            webhookTemplateConfigMapName: webhook-template
            webhookTemplateConfigMapKey: template

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
