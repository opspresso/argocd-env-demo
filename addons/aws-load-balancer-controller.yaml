apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: aws-load-balancer-controller
spec:
  generators:
    - list:
        elements:
          - cluster: eks-demo
            url: https://036CC21FD52FBA1C2D0E7F6C4551A402.yl4.ap-northeast-2.eks.amazonaws.com
            values:
              region: "ap-northeast-2"
              rolearn: "arn:aws:iam::314695318048:role/irsa--eks-demo--aws-load-balancer-controller"

  template:
    metadata:
      name: "aws-load-balancer-controller-{{cluster}}"
      annotations:
        recipients.argocd-notifications.argoproj.io: slack:noti-argocd-alpha-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: addons
      destination:
        server: "{{url}}"
        namespace: addon-aws-load-balancer-controller
      source:
        repoURL: https://aws.github.io/eks-charts
        targetRevision: "1.2.6"
        chart: aws-load-balancer-controller
        helm:
          values: |-
            fullnameOverride: aws-load-balancer-controller

            clusterName: "{{cluster}}"

            serviceAccount:
              annotations:
                eks.amazonaws.com/role-arn: "{{values.rolearn}}"

            tolerations:
              - key: group
                operator: Equal
                value: operation
                effect: NoSchedule

            nodeSelector:
              group: operation

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
