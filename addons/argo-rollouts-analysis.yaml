apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: argo-rollouts-analysis
spec:
  generators:
    - list:
        elements:
          - cluster: eks-demo

  template:
    metadata:
      name: "argo-rollouts-analysis-{{cluster}}"
      annotations:
        recipients.argocd-notifications.argoproj.io: slack:noti-argocd-alpha-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: default
      destination:
        name: "{{cluster}}"
        namespace: addon-argo-rollouts
      source:
        repoURL: https://charts.helm.sh/incubator
        targetRevision: "0.2.5"
        chart: raw
        helm:
          values: |-
            fullnameOverride: argo-rollouts-analysis

            resources:
              - apiVersion: argoproj.io/v1alpha1
                kind: ClusterAnalysisTemplate
                metadata:
                  name: success-rate
                spec:
                  args:
                    - name: service-name
                  metrics:
                    - name: success-rate
                      interval: 5m
                      successCondition: result[0] >= 0.95
                      failureLimit: 3
                      provider:
                        prometheus:
                          address: http://prometheus.example.com:9090
                          query: |
                            sum(irate(
                              istio_requests_total{reporter="source",destination_service=~"{{args.service-name}}",response_code!~"5.*"}[5m]
                            )) /
                            sum(irate(
                              istio_requests_total{reporter="source",destination_service=~"{{args.service-name}}"}[5m]
                            ))

              - apiVersion: argoproj.io/v1alpha1
                kind: ClusterAnalysisTemplate
                metadata:
                  name: http-benchmark
                spec:
                  args:
                    - name: url
                  metrics:
                    - name: http-benchmark
                      interval: 60s
                      count: 5
                      failureLimit: 5
                      provider:
                        job:
                          spec:
                            template:
                              metadata:
                                annotations:
                                  sidecar.istio.io/inject: "false"
                              spec:
                                containers:
                                  - name: load-tester
                                    image: argoproj/load-tester:latest
                                    command: [sh, -xec]
                                    args:
                                      - |
                                        wrk -t5 -c5 -d10 -s report.lua {{ .Values.analysis.url }}
                                        jq -e '.errors_ratio <= 0.5' report.json
                                restartPolicy: Never
                            # https://kubernetes.io/ko/docs/concepts/workloads/controllers/jobs-run-to-completion/
                            activeDeadlineSeconds: 300
                            backoffLimit: 10
                            ttlSecondsAfterFinished: 600

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
