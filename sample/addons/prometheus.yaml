apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: prometheus
spec:
  generators:
    - list:
        elements:
          - cluster: eks-demo
            values:
              host: "demo.nalbam.com"

  template:
    metadata:
      name: "prometheus-{{cluster}}"
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: noti-argocd-{{cluster_env}}-addon
      labels:
        app.kubernetes.io/instance: "addons-{{cluster}}"
        krmt.io/cluster: "{{cluster}}"
        krmt.io/group: "addons"
    spec:
      project: addons
      destination:
        name: "{{cluster}}"
        namespace: addon-prometheus
      source:
        repoURL: https://prometheus-community.github.io/helm-charts
        targetRevision: "14.6.0"
        chart: prometheus
        helm:
          values: |-
            fullnameOverride: prometheus

            alertmanager:
              fullnameOverride: alertmanager

              # statefulSet:
              #   enabled: true

              persistentVolume:
                enabled: true
                size: 5Gi
                storageClass: gp3

              tolerations:
                - key: group
                  operator: Equal
                  value: monitoring
                  effect: NoSchedule
              nodeSelector:
                group: monitoring

            server:
              fullnameOverride: prometheus

              # statefulSet:
              #   enabled: true

              persistentVolume:
                enabled: true
                size: 50Gi
                storageClass: gp3

              tolerations:
                - key: group
                  operator: Equal
                  value: monitoring
                  effect: NoSchedule
              nodeSelector:
                group: monitoring

            alertmanagerFiles:
              alertmanager.yml:
                global:
                  slack_api_url: 'SLACK_TOKEN'

                receivers:
                  - name: "null"
                  - name: "slack"
                    slack_configs:
                      - channel: "#sandbox"
                        color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'
                        icon_url: https://avatars3.githubusercontent.com/u/3380462
                        send_resolved: true
                        title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Monitoring Event Notification'
                        text: |
                          {{ range .Alerts }}
                          *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`

                          *Cluster:* `{{cluster}}`

                          *Description:* {{ .Annotations.description }}

                          *Details:*
                            {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* {{ .Value }}
                            {{ end }}
                          {{ end }}

                route:
                  receiver: "slack"
                  # routes:
                  #   - match:
                  #       alertname: Watchdog
                  #     receiver: "null"
                  #   - match:
                  #     receiver: "slack"
                  #     continue: false

            serverFiles:
              alerting_rules.yml: {}

              recording_rules.yml: {}

            kube-state-metrics:
              fullnameOverride: kube-state-metrics

            nodeExporter:
              fullnameOverride: node-exporter

            pushgateway:
              fullnameOverride: pushgateway

      # ignoreDifferences:
      #   - kind: MutatingWebhookConfiguration
      #     group: admissionregistration.k8s.io
      #     jsonPointers:
      #       - /webhooks/0/clientConfig/caBundle
      #       - /webhooks/0/failurePolicy

      #   - kind: ValidatingWebhookConfiguration
      #     group: admissionregistration.k8s.io
      #     jsonPointers:
      #       - /webhooks/0/clientConfig/caBundle
      #       - /webhooks/0/failurePolicy

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
