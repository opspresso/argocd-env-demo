{{- if eq .Values.controller.kind "Rollout" }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
{{- else }}
apiVersion: apps/v1
kind: Deployment
{{- end }}
metadata:
  name: {{ include "sample.fullname" . }}
  labels:
    app: {{ include "sample.fullname" . }}
    {{- include "sample.labels" . | nindent 4 }}
    version: {{ .Values.image.tag | default .Chart.AppVersion }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "sample.selectorLabels" . | nindent 6 }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ include "sample.fullname" . }}
        {{- include "sample.selectorLabels" . | nindent 8 }}
        version: {{ .Values.image.tag | default .Chart.AppVersion }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sample.serviceAccountName" . }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: {{ .Values.service.name | default "http" }}
              containerPort: {{ .Values.service.port }}
              protocol: {{ .Values.service.protocol | default "TCP" }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
{{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
{{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
{{ toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- with .Values.env }}
{{ toYaml . | indent 12 }}
            {{- end }}
          {{ if or .Values.configmap.enabled .Values.secret.enabled }}
          envFrom:
            {{ if .Values.configmap.enabled }}
            - configMapRef:
                name: {{ include "sample.fullname" . }}
            {{ end }}
            {{ if .Values.secret.enabled }}
            - secretRef:
                name: {{ include "sample.fullname" . }}
            {{ end }}
          {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | nindent 8 }}
      {{- end }}
