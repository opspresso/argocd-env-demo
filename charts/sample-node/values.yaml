app:
  fullnameOverride: sample-node

  image:
    # repository: 082867736673.dkr.ecr.ap-northeast-2.amazonaws.com/nalbam/sample-node
    repository: nalbam/sample-node

  autoscaling:
    enabled: true
    maxReplicas: 5
    minReplicas: 1
    behavior:
      scaleDown:
        policies:
        - periodSeconds: 60
          type: Percent
          value: 25
        stabilizationWindowSeconds: 600
    metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 128Mi

  controller:
    kind: Rollout
    strategy:
      type: Canary
      # rollingUpdate:
      #   maxSurge: 25%
      #   maxUnavailable: 0
      canary:
        canaryService: sample-node-preview
        stableService: sample-node
        trafficRouting:
          istio:
            virtualService:
              name: sample-node
              routes:
              - primary
            destinationRule:
              name: sample-node
              canarySubsetName: canary
              stableSubsetName: stable
        steps:
        - setWeight: 10
        - pause:
            duration: 10
        - analysis:
            args:
            - name: url
              value: http://sample-node-preview/success/98
            templates:
            - clusterScope: true
              templateName: http-benchmark
        - setWeight: 25
        - pause:
            duration: 10
        - analysis:
            args:
            - name: url
              value: http://sample-node-preview/success/98
            templates:
            - clusterScope: true
              templateName: http-benchmark
        - setWeight: 50
        - pause:
            duration: 10
        - analysis:
            args:
            - name: url
              value: http://sample-node-preview/success/98
            templates:
            - clusterScope: true
              templateName: http-benchmark

  service:
    name: http
    targetPort: 3000

  readinessProbe:
    failureThreshold: 3
    httpGet:
      path: /read
      port: 3000
    initialDelaySeconds: 3
    periodSeconds: 3

  livenessProbe:
    failureThreshold: 3
    httpGet:
      path: /live
      port: 3000
    initialDelaySeconds: 3
    periodSeconds: 3

  istio:
    canary:
      subsets: true

    trafficPolicy:
      connectionPool:
        tcp:
          maxConnections: 10
        http:
          http1MaxPendingRequests: 10
          http2MaxRequests: 10
          maxRequestsPerConnection: 10
      outlierDetection:
        consecutive5xxErrors: 3
        interval: 1s
        baseEjectionTime: 3m
        maxEjectionPercent: 100

  pdb:
    enabled: true
    maxUnavailable: 1

redis:
  fullnameOverride: redis

  global:
    storageClass: "gp3"

  architecture: standalone
