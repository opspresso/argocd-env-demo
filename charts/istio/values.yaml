base:

istiod:
  global:
    hub: "gcr.io/istio-release"

    proxy:
      lifecycle:
        preStop:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "while [ $(netstat -plunt | grep tcp | grep -v envoy | wc -l | xargs) -ne 0 ]; do sleep 1; done"

    tracer:
      zipkin:
        address: "jaeger-collector.addon-tracing.svc.cluster.local:9411"

  meshConfig:
    defaultConfig:
      tracing:
        sampling: 10
      gatewayTopology:
        numTrustedProxies: 1
      holdApplicationUntilProxyStarts: true
    enableTracing: true
    rootNamespace: istio-system

  pilot:
    autoscaleEnabled: false
    replicaCount: 2
    autoscaleMin: 2
    autoscaleMax: 5

    resources:
      requests:
        cpu: 100m
        memory: 128Mi

gateway:
  name: istio-ingressgateway

  replicaCount: 2

  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80

  service:
    type: ClusterIP

raw:
  resources:
    - apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      metadata:
        labels:
          app: istio-components
          release: prometheus
        name: istio-components-metrics
      spec:
        endpoints:
        - interval: 30s
          metricRelabelings:
            - sourceLabels:
                - cluster
              targetLabel: istio_cluster
            - action: labeldrop
              regex: cluster
          port: http-monitoring
        jobLabel: istio
        namespaceSelector:
          matchNames:
          - istio-system
        selector:
          matchExpressions:
            - key: istio
              operator: In
              values:
                - mixer
                - pilot
                - galley
                - citadel
                - sidecar-injector
                - istiod

    - apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      metadata:
        labels:
          app: istio-servicemesh
          release: prometheus
        name: istio-servicemesh-metrics
      spec:
        endpoints:
        - interval: 15s
          path: /stats/prometheus
          relabelings:
          - sourceLabels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: '.*-envoy-prom'
          - action: labeldrop
            regex: "__meta_kubernetes_pod_label_(.+)"
          - sourceLabels: [__meta_kubernetes_namespace]
            action: replace
            targetLabel: namespace
          - sourceLabels: [__meta_kubernetes_pod_name]
            action: replace
            targetLabel: pod_name
        jobLabel: istio-servicemesh
        namespaceSelector:
          any: true
        selector:
          matchExpressions:
          - key: istio
            operator: DoesNotExist

    - apiVersion: elbv2.k8s.aws/v1beta1
      kind: TargetGroupBinding
      metadata:
        name: istio-ingressgateway-public
      spec:
        serviceRef:
          name: istio-ingressgateway
          port: http2
        targetGroupARN: "{{istio.target_group.public_http}}"
        targetType: ip

    - apiVersion: elbv2.k8s.aws/v1beta1
      kind: TargetGroupBinding
      metadata:
        name: istio-ingressgateway-internal
      spec:
        serviceRef:
          name: istio-ingressgateway
          port: http2
        targetGroupARN: "{{istio.target_group.internal_http}}"
        targetType: ip

    - apiVersion: v1
      kind: Service
      metadata:
        labels:
          app: istio-ingressgateway
          istio: ingressgateway
        name: istio-ingressgateway-metrics
      spec:
        ports:
          - name: http-envoy-prom
            port: 25090
            protocol: TCP
            targetPort: 15090
        selector:
          app: istio-ingressgateway
          istio: ingressgateway
        type: ClusterIP

    - apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      metadata:
        labels:
          app: istio-ingressgateway
          release: prometheus
        name: istio-ingressgateway-metrics
      spec:
        endpoints:
        - interval: 15s
          path: /stats/prometheus
          port: http-envoy-prom
        jobLabel: istio-ingressgateway
        namespaceSelector:
          matchNames:
          - istio-system
        selector:
          matchLabels:
            app: istio-ingressgateway
            istio: ingressgateway
